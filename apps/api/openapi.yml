openapi: 3.0.3

info:
  title: Risedle API
  version: 1.1.0

servers:
  - description: Staging
    url: https://apiedge.risedle.exchange
  - description: Production
    url: https://api.risedle.exchange
  - description: Local
    url: http://localhost:3000

tags:
  #  - name: Quotes
  #    description: Quote for swapping ERC20 token
  - name: Tokens
    description: Tokens information

paths:
  /v1/{chainId}/tokens:
    get:
      tags:
        - Tokens
      operationId: getTokensByChainId
      summary: |
        Get list of tokens and its market information on specific chain.
      parameters:
        - in: path
          name: chainId
          schema:
            $ref: "#/components/schemas/ChainId"
          required: true
      responses:
        200:
          description: |
            List of tokens and the dex information such as price and volume.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokens:
                    type: array
                    items:
                      $ref: "#/components/schemas/TokenInfo"
        404:
          description: |
            Chain ID not supported

#  /v1/quotes:
#    get:
#      tags:
#        - Quotes
#      operationId: getQuotes
#      summary: |
#        Get the fair price, fee and execution cost for swapping ERC20 token
#      parameters:
#        - name: chainId
#          in: query
#          description: |
#            Chain ID. This is used to get the current gas price of the chain
#          required: true
#          schema:
#            type: integer
#            format: int32
#            example: 42161
#        - name: tokenIn
#          in: query
#          description: |
#            ERC20 token address that user want to sell to get `tokenOut`
#          required: true
#          schema:
#            $ref: "#/components/schemas/Address"
#        - name: tokenOut
#          in: query
#          description: |
#            ERC20 token address that user want to buy for `tokenIn`
#          required: true
#          schema:
#            $ref: "#/components/schemas/Address"
#        - name: amountIn
#          in: query
#          description: |
#            The amount of `tokenIn` (in `tokenIn` base units)
#          required: true
#          schema:
#            $ref: "#/components/schemas/BigNumber"
#      responses:
#        200:
#          description: Fair quotes for wapping ERC20 token
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Quotes"

components:
  schemas:
    Address:
      description: 20 byte Ethereum address encoded as a hex with `0x` prefix
      type: string
      example: "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"

    BigNumber:
      description: Ethers.js BigNumber
      type: string
      example: "1000000000"

    ChainId:
      description: Chain ID
      type: number
      example: 42161

    USD:
      description: Price in USD terms
      type: number
      format: float
      example: 12.9879

    Percentage:
      description: Percentage
      type: number
      format: float
      example: 99.88888888

    FeeBreakdown:
      description: |
        This is used to calculate the `amountOutAfterFee`
      type: object
      properties:
        tradingFee:
          description: |
            Trading fee in `tokenOut` base units
          $ref: "#/components/schemas/BigNumber"
        tradingFeeUSD:
          $ref: "#/components/schemas/USD"
        tradingFeeDiscount:
          description: |
            Trading fee discount in `tokenOut` base units
          $ref: "#/components/schemas/BigNumber"
        tradingFeeDiscountUSD:
          $ref: "#/components/schemas/USD"
        executionCost:
          description: |
            The execution cost in `tokenOut` base units
          $ref: "#/components/schemas/BigNumber"
        executionCostUSD:
          $ref: "#/components/schemas/USD"

    Quotes:
      description: Fair quotes for swapping ERC20 token
      type: object
      properties:
        chainId:
          type: integer
          example: 42161
        tokenIn:
          $ref: "#/components/schemas/Address"
        tokenOut:
          $ref: "#/components/schemas/Address"
        amountIn:
          $ref: "#/components/schemas/BigNumber"
        amountInUSD:
          $ref: "#/components/schemas/USD"
        amountOutBeforeFee:
          $ref: "#/components/schemas/BigNumber"
        amountOutBeforeFeeUSD:
          $ref: "#/components/schemas/USD"
        fees:
          $ref: "#/components/schemas/FeeBreakdown"
        amountOutAfterFee:
          $ref: "#/components/schemas/BigNumber"
        amountOutAfterFeeUSD:
          $ref: "#/components/schemas/USD"

    TokenInfo:
      description: ERC20 token metadata & market information
      type: object
      properties:
        name:
          description: Token's name
          type: string
          example: "Ethereum"
        symbol:
          description: Token's symbol
          type: string
          example: "ETH"
        decimals:
          description: Token's decimals
          type: number
          example: 18
        address:
          description: Token's address
          $ref: "#/components/schemas/Address"
        priceUSD:
          description: Current token price in USD
          $ref: "#/components/schemas/USD"
        dailyPriceChangeUSD:
          description: |
            Price change (USD) in the last 24 hours. It can be negative.
          $ref: "#/components/schemas/USD"
        dailyPriceChangePercentage:
          description: |
            Price change (%) in the last 24 hours. It can be negative.
          $ref: "#/components/schemas/USD"
        volumeUSD:
          description: Current token trade volume in USD
          $ref: "#/components/schemas/USD"
        dailyVolumeChangeUSD:
          description: |
            Volume change (USD) in the last 24 hours. It can be negative.
          $ref: "#/components/schemas/USD"
        dailyVolumeChangePercentage:
          description: |
            Volume change (%) in the last 24 hours. It can be negative.
          $ref: "#/components/schemas/USD"
        totalLiqudity:
          description: |
            Total available liquidity
          type: number
          example: 100000000
        totalLiquidityUSD:
          description: |
            Total available liquidity (USD)
          $ref: "#/components/schemas/USD"
        source:
          description: |
            The source data of token info
          type: string
          example: PancakeSwapSubgraph

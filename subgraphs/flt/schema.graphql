type Factory @entity {
    # factory address
    id: ID!

    # Total volume (all swaps)
    totalVolumeUSD: BigDecimal!
    totalVolumeETH: BigDecimal!
    totalFeeUSD: BigDecimal!

    # Transactions
    txCount: BigInt!

    # FLT data
    flts: [FLT!]!
    fltCount: BigInt!
}

type FLT @entity {
    # token address
    id: ID!

    symbol: String!
    name: String!
    decimals: BigInt!

    # Total supply and max supply
    totalSupply: BigInt!
    maxTotalSupply: BigInt!

    # FLT specific volume
    tradeVolume: BigInt!
    tradeVolumeUSD: BigDecimal!

    # FLT specific fee
    tradeFeeUSD: BigDecimal!

    # transactions across all swaps
    txCount: BigInt!

    fltDayData: [FLTHourData!]! @derivedFrom(field: "flt")
    fltHourData: [FLTDayData!]! @derivedFrom(field: "flt")
}

# ETH price from chainlink
type ETHPriceData @entity {
    id: ID! # always 'latest'
    priceUSD: BigDecimal!
    blockNumber: BigInt!
    timestamp: BigInt!
}

type Token @entity {
    # token address
    id: ID!

    symbol: String!
    name: String!
    decimals: BigInt!
}

type FLTHourData @entity {
    id: ID! # flt address + "-" + hour
    periodStartUnix: Int! # unix timestamp for start of hour
    flt: FLT!

    # OHLC data
    open: BigDecimal!
    high: BigDecimal!
    low: BigDecimal!
    close: BigDecimal!
    priceUSD: BigDecimal!

    # Underlying data
    collateralPerShare: BigInt!
    debtPerShare: BigInt!
    totalCollateral: BigInt!
    totalDebt: BigInt!
    totalSupply: BigInt!

    # Trade volume
    tradeVolume: BigDecimal!
    tradeVolumeUSD: BigDecimal!
    tradeFeeUSD: BigDecimal!
    tradeTxns: BigInt!
}

type FLTDayData @entity {
    id: ID! # flt address + "-" + hour
    periodStartUnix: Int! # unix timestamp for start of hour
    flt: FLT!

    # OHLC data
    open: BigDecimal!
    high: BigDecimal!
    low: BigDecimal!
    close: BigDecimal!
    priceUSD: BigDecimal!

    # Underlying data
    collateralPerShare: BigInt!
    debtPerShare: BigInt!
    totalCollateral: BigInt!
    totalDebt: BigInt!
    totalSupply: BigInt!

    # Trade volume
    tradeVolume: BigDecimal!
    tradeVolumeUSD: BigDecimal!
    tradeFeeUSD: BigDecimal!
    tradeTxns: BigInt!
}

type Transaction @entity {
    id: ID! # txn hash
    blockNumber: BigInt!
    timestamp: BigInt!
    swaps: [Swap!]
}

type User @entity {
    id: ID!
    usdSwapped: BigDecimal!
}

type Swap @entity {
    # Basic metadata
    id: ID! # transaction hash + "-" + index in swaps Transaction array
    transaction: Transaction!
    timestamp: BigInt!

    # FLT metadata
    flt: FLT!

    # User metadata
    sender: User!
    recipient: User!

    # Swap metadata
    tokenIn: Token!
    tokenOut: Token!
    amountIn: BigDecimal!
    amountOut: BigDecimal!
    amountInUSD: BigDecimal!
    amountOutUSD: BigDecimal!
    feeAmount: BigDecimal! # fee in tokenIn or tokenOut (non-flt token)
    feeAmountUSD: BigDecimal!
}

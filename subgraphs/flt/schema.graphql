type Factory @entity {
    # factory address
    id: ID!

    # Total volume of all FLT
    totalVolumeUSD: BigDecimal!
    totalFeeUSD: BigDecimal!
    totalTxns: BigInt!

    # FLT data
    flts: [FLT!]
    fltCount: BigInt!
}

type FLT @entity {
    id: ID! # token address
    factory: Factory!

    symbol: String!
    name: String!
    decimals: BigInt!

    collateral: Token!
    debt: Token!

    # Metadata
    minLeverageRatio: BigDecimal!
    maxLeverageRatio: BigDecimal!
    maxDrift: BigDecimal!
    maxIncentive: BigDecimal!
    maxSupply: BigDecimal!

    # Sum of all trade data
    totalVolume: BigDecimal!
    totalVolumeUSD: BigDecimal!
    totalFeeUSD: BigDecimal!
    totalTxns: BigInt!

    fltHourData: [FLTHourData!]! @derivedFrom(field: "flt")
    fltDayData: [FLTDayData!]! @derivedFrom(field: "flt")
    swaps: [Swap!]! @derivedFrom(field: "flt")
}

# ETH price from chainlink
type ETHPriceData @entity {
    id: ID! # always 'latest'
    priceUSD: BigDecimal!
    blockNumber: BigInt!
    timestamp: BigInt!
}

type Token @entity {
    # token address
    id: ID!

    symbol: String!
    name: String!
    decimals: BigInt!
}

type FLTHourData @entity {
    id: ID! # flt address + "-" + hour
    periodStartUnix: Int! # unix timestamp for start of hour
    flt: FLT!

    # OHLC data
    open: BigDecimal!
    high: BigDecimal!
    low: BigDecimal!
    close: BigDecimal!
    priceUSD: BigDecimal!

    # Underlying data
    collateralPerShare: BigDecimal!
    debtPerShare: BigDecimal!
    totalCollateral: BigDecimal!
    totalDebt: BigDecimal!
    totalSupply: BigDecimal!

    # Trade volume
    tradeVolume: BigDecimal!
    tradeVolumeUSD: BigDecimal!
    tradeFeeUSD: BigDecimal!
    tradeTxns: BigInt!
}

type FLTDayData @entity {
    id: ID! # flt address + "-" + hour
    periodStartUnix: Int! # unix timestamp for start of hour
    flt: FLT!

    # OHLC data
    open: BigDecimal!
    high: BigDecimal!
    low: BigDecimal!
    close: BigDecimal!
    priceUSD: BigDecimal!

    # Underlying data
    collateralPerShare: BigDecimal!
    debtPerShare: BigDecimal!
    totalCollateral: BigDecimal!
    totalDebt: BigDecimal!
    totalSupply: BigDecimal!

    # Trade volume
    tradeVolume: BigDecimal!
    tradeVolumeUSD: BigDecimal!
    tradeFeeUSD: BigDecimal!
    tradeTxns: BigInt!
}

type Transaction @entity {
    id: ID! # txn hash
    blockNumber: BigInt!
    timestamp: BigInt!
    swaps: [Swap!]!
}

type User @entity {
    id: ID!
    openPositions: [OpenPosition!]! @derivedFrom(field: "user")
    swaps: [Swap!]! @derivedFrom(field: "user")
}

type OpenPosition @entity {
    # user address + "-" + flt address
    id: ID!
    user: User!
    flt: FLT!

    # Increased when buy, decreased when sell
    amount: BigDecimal!
    amountUSD: BigDecimal!
}

type Swap @entity {
    # Basic metadata
    id: ID! # transaction hash + "-" + index in swaps Transaction array
    transaction: Transaction!
    timestamp: BigInt!

    # FLT metadata
    flt: FLT!

    # User metadata
    user: User! # EOA that initiate transaction
    sender: Bytes!
    recipient: Bytes!

    # Swap metadata
    tokenIn: Token!
    tokenOut: Token!
    amountIn: BigDecimal!
    amountOut: BigDecimal!
    amountInUSD: BigDecimal!
    amountOutUSD: BigDecimal!
    feeAmount: BigDecimal!
    feeAmountUSD: BigDecimal!
}

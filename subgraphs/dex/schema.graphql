# ████ Protocol ██████████████████████████████████████████████████████████████

type Protocol @entity {
    # This will set as "1"
    id: ID!

    # Name of the protocol, including version. e.g. Uniswap v3
    name: String!

    # Slug of protocol, including version. e.g. uniswap-v3
    slug: String!

    # The blockchain this subgraph is indexing on
    chainId: String!
    chainSlug: String!
    chainName: String!

    # Current TVL (Total Value Locked) of the entire protocol
    totalValueLockedUSD: BigDecimal!

    # Trading volume
    cumulativeVolumeUSD: BigDecimal!

    # Revenue claimed by liquidity providers of the protocol
    cumulativeLPRevenueUSD: BigDecimal!

    # Revenue claimed by protocol
    cumulativeProtocolRevenueUSD: BigDecimal!

    # All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap
    cumulativeTotalRevenueUSD: BigDecimal!

    # Number of cumulative unique users
    cumulativeUniqueUsers: Int!

    # Total number of pools
    totalLiquidityPoolCount: Int!

    # ████ Relations █████████████████████████████████████████████████████████

    # List of all token listen on the protocol
    tokens: [Token!]! @derivedFrom(field: "protocol")

    # List of all liquidity pools on the protocol
    pools: [LiquidityPool!]! @derivedFrom(field: "protocol")
}

# ████ Token █████████████████████████████████████████████████████████████████

type Token @entity {
    # Token address
    id: ID!

    # Name of the token, mirrored from the smart contract
    name: String!

    # Symbol of the token, mirrored from the smart contract
    symbol: String!

    # The number of decimal places this token uses
    decimals: Int!

    # Current total supply of the token
    totalSupply: BigInt!

    # All historical volume in USD
    cumulativeVolumeUSD: BigDecimal!

    # Latest token price in ETH
    latestPriceETH: BigDecimal!

    # Block number of the last token price
    latestPriceETHBlockNumber: BigInt!

    # Latest market cap in ETH; price * total supply
    latestMarketCapETH: BigDecimal!

    # Current TVL (Total Value Locked) of the entire liquidity pools
    totalValueLockedUSD: BigDecimal!

    # ████ Relations █████████████████████████████████████████████████████████

    # Protocol info
    protocol: Protocol!

    # Liquidity pools
    pools: [TokenLiquidityPool!]! @derivedFrom(field: "token")
}

# ████ Liquidity Pool ████████████████████████████████████████████████████████

type LiquidityPool @entity {
    # Liquidity pool contract address
    id: ID!

    # Name of liquidity pool (e.g. Curve.fi DAI/USDC/USDT)
    name: String!

    # Symbol of liquidity pool (e.g. 3CRV)
    symbol: String!

    # Creation timestamp
    createdTimestamp: BigInt!

    # Creation block number
    createdBlockNumber: BigInt!

    # Current TVL (Total Value Locked) of this pool in USD
    totalValueLockedUSD: BigDecimal!

    # Trading volume
    cumulativeVolumeUSD: BigDecimal!

    # Revenue claimed by liquidity providers of the protocol
    cumulativeLPRevenueUSD: BigDecimal!

    # Revenue claimed by protocol
    cumulativeProtocolRevenueUSD: BigDecimal!

    # All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap
    cumulativeTotalRevenueUSD: BigDecimal!

    # Number of cumulative unique users
    cumulativeUniqueUsers: Int!

    # ████ Relations █████████████████████████████████████████████████████████

    # Protocol info
    protocol: Protocol!

    # List of token available in the pool
    tokens: [TokenLiquidityPool!]! @derivedFrom(field: "pool")

    # TODO(pyk): add reward token
    # TODO(pyk): add snapshots
    # TODO(pyk): track price snapshot
}

# Many to many relationship
type TokenLiquidityPool @entity {
    # token.id.concat(pool.id)
    id: ID!

    # ████ Relations █████████████████████████████████████████████████████████
    token: Token!
    pool: LiquidityPool!
}
